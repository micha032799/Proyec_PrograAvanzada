use PA;

-- Tabla de Categorías
CREATE TABLE CATEGORIA (
  ID_CATEGORIA INT PRIMARY KEY,
  NOMBRE VARCHAR(50) NOT NULL
);

-- Tabla de Productos
CREATE TABLE PRODUCTO (
  ID_PRODUCTO INT PRIMARY KEY,
  NOMBRE VARCHAR(100) NOT NULL,
  DESCRIPCION VARCHAR(500) NOT NULL,
  PRECIO DECIMAL(10, 2) NOT NULL,
  STOCK INT NOT NULL,
  ID_CATEGORIA INT NOT NULL,
  FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

-- Tabla de Clientes
CREATE TABLE CLIENTE (
  ID_CLIENTE INT PRIMARY KEY,
  NOMBRE VARCHAR(50) NOT NULL,
  APELLIDOS VARCHAR(50) NOT NULL,
  CORREO VARCHAR(100) NOT NULL,
  TELEFONO VARCHAR(20) NOT NULL,
  DIRECCION VARCHAR(100) NOT NULL
);

-- Tabla de Órdenes (o Pedidos)
CREATE TABLE ORDEN (
  ID_ORDEN INT PRIMARY KEY,
  ID_CLIENTE INT,
  FECHA DATE,
  TOTAL DECIMAL(10, 2) NOT NULL,
  ESTADO INT NOT NULL,
  FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- Tabla de Detalles de órdenes
CREATE TABLE DETALLE_ORDEN (
  ID_DETALLE_ORDEN INT PRIMARY KEY,
  ID_ORDEN INT,
  ID_PRODUCTO INT,
  CANTIDAD INT NOT NULL,
  PRECIO_UNITARIO DECIMAL(10, 2) NOT NULL,
  FOREIGN KEY (ID_ORDEN) REFERENCES ORDEN(ID_ORDEN),
  FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

-- Tabla de Admin (para el acceso al sistema)
CREATE TABLE ADMINISTRADOR (
  ID_USUARIO INT PRIMARY KEY,
  NOMBRE_USUARIO VARCHAR(50) NOT NULL,
  CONTRASENA VARCHAR(100) NOT NULL,
  ID_CLIENTE INT,
  FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- Tabla para productos electrónicos
CREATE TABLE PRODUCTOS_ELECTRONICOS (
  ID_PRODUCTO_ELECTRONICO INT NOT NULL IDENTITY(1,1), /* PK */
  NOMBRE VARCHAR(100) NOT NULL,
  DESCRIPCION VARCHAR(500),
  PRECIO DECIMAL(10, 2) NOT NULL,
  STOCK INT NOT NULL,
  ID_CATEGORIA INT NOT NULL, /* FK a tabla CATEGORIA */
  ID_PROVEEDOR INT NOT NULL, /* FK a tabla PROVEEDOR */
  CONSTRAINT PK_PRODUCTOS_ELECTRONICOS PRIMARY KEY (ID_PRODUCTO_ELECTRONICO),
  CONSTRAINT FK_PRODUCTOS_ELECTRONICOS_CATEGORIA FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

-- Tabla para videojuegos
CREATE TABLE VIDEOJUEGOS (
  ID_VIDEOJUEGO INT NOT NULL IDENTITY(1,1), /* PK */
  NOMBRE VARCHAR(100) NOT NULL,
  PLATAFORMA VARCHAR(50),
  GENERO VARCHAR(50),
  PRECIO DECIMAL(10, 2) NOT NULL,
  STOCK INT NOT NULL,
  ID_CATEGORIA INT NOT NULL, /* FK a tabla CATEGORIA */
  ID_PROVEEDOR INT NOT NULL, /* FK a tabla PROVEEDOR */
  CONSTRAINT PK_VIDEOJUEGOS PRIMARY KEY (ID_VIDEOJUEGO),
  CONSTRAINT FK_VIDEOJUEGOS_CATEGORIA FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

-- Tabla para pedidos
CREATE TABLE PEDIDOS (
  ID_PEDIDO INT NOT NULL IDENTITY(1,1), /* PK */
  ID_CLIENTE INT NOT NULL, /* FK a tabla CLIENTE */
  FECHA_PEDIDO DATE NOT NULL,
  ESTADO VARCHAR(50) NOT NULL,
  TOTAL_PEDIDO DECIMAL(10, 2) NOT NULL,
  CONSTRAINT PK_PEDIDOS PRIMARY KEY (ID_PEDIDO),
  CONSTRAINT FK_PEDIDOS_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- Tabla para detalles de pedidos
CREATE TABLE DETALLE_PEDIDO (
  ID_DETALLE_PEDIDO INT NOT NULL IDENTITY(1,1), /* PK */
  ID_PEDIDO INT NOT NULL, /* FK a tabla PEDIDOS */
  ID_PRODUCTO INT NOT NULL, /* FK a tabla PRODUCTOS_ELECTRONICOS o VIDEOJUEGOS */
  CANTIDAD INT NOT NULL,
  PRECIO_UNITARIO DECIMAL(10, 2) NOT NULL,
  CONSTRAINT PK_DETALLE_PEDIDO PRIMARY KEY (ID_DETALLE_PEDIDO),
  CONSTRAINT FK_DETALLE_PEDIDO_PEDIDO FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO),
  CONSTRAINT FK_DETALLE_PEDIDO_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

-- Tabla para reseñas de productos
CREATE TABLE RESERVAS (
  ID_RESERVA INT NOT NULL IDENTITY(1,1), /* PK */
  ID_CLIENTE INT NOT NULL, /* FK a tabla CLIENTE */
  ID_PRODUCTO INT NOT NULL, /* FK a tabla PRODUCTOS_ELECTRONICOS o VIDEOJUEGOS */
  FECHA_RESERVA DATE NOT NULL,
  CANTIDAD INT NOT NULL,
  CONSTRAINT PK_RESERVAS PRIMARY KEY (ID_RESERVA),
  CONSTRAINT FK_RESERVAS_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
  CONSTRAINT FK_RESERVAS_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

-- Tabla para reseñas de productos
CREATE TABLE RESENAS (
  ID_RESENA INT NOT NULL IDENTITY(1,1), /* PK */
  ID_CLIENTE INT NOT NULL, /* FK a tabla CLIENTE */
  ID_PRODUCTO INT NOT NULL, /* FK a tabla PRODUCTOS_ELECTRONICOS o VIDEOJUEGOS */
  CALIFICACION INT NOT NULL,
  COMENTARIO VARCHAR(500),
  FECHA_RESENA DATE NOT NULL,
  CONSTRAINT PK_RESENAS PRIMARY KEY (ID_RESENA),
  CONSTRAINT FK_RESENAS_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
  CONSTRAINT FK_RESENAS_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

-- Tabla para promociones
CREATE TABLE PROMOCIONES (
  ID_PROMOCION INT NOT NULL IDENTITY(1,1), /* PK */
  NOMBRE VARCHAR(100) NOT NULL,
  DESCRIPCION VARCHAR(500),
  FECHA_INICIO DATE NOT NULL,
  FECHA_FIN DATE NOT NULL,
  DESCUENTO DECIMAL(5, 2) NOT NULL,
  CONSTRAINT PK_PROMOCIONES PRIMARY KEY (ID_PROMOCION)
);

-- Tabla para asociar productos a promociones
CREATE TABLE PRODUCTOS_PROMOCIONES (
  ID_PRODUCTO INT NOT NULL, /* FK a tabla PRODUCTOS_ELECTRONICOS o VIDEOJUEGOS */
  ID_PROMOCION INT NOT NULL, /* FK a tabla PROMOCIONES */
  CONSTRAINT PK_PRODUCTOS_PROMOCIONES PRIMARY KEY (ID_PRODUCTO, ID_PROMOCION),
  CONSTRAINT FK_PRODUCTOS_PROMOCIONES_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
  CONSTRAINT FK_PRODUCTOS_PROMOCIONES_PROMOCION FOREIGN KEY (ID_PROMOCION) REFERENCES PROMOCIONES(ID_PROMOCION)
);

CREATE TABLE CARRITO (
  ID_CARRITO INT NOT NULL IDENTITY(1,1), /* PK */
  ID_CLIENTE INT NOT NULL, /* FK a tabla CLIENTE */
  FECHA_AGREGADO DATETIME NOT NULL,
  CONSTRAINT PK_CARRITOS PRIMARY KEY (ID_CARRITO),
  CONSTRAINT FK_CARRITOS_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- Tabla de Detalles del Carrito
CREATE TABLE DETALLES_CARRITO (
  ID_DETALLE INT NOT NULL IDENTITY(1,1), /* PK */
  ID_CARRITO INT NOT NULL, /* FK a tabla CARRITOS */
  ID_PRODUCTO INT NOT NULL, /* FK a tabla PRODUCTOS_ELECTRONICOS o VIDEOJUEGOS */
  CANTIDAD INT NOT NULL,
  CONSTRAINT PK_DETALLES_CARRITO PRIMARY KEY (ID_DETALLE),
  CONSTRAINT FK_DETALLES_CARRITO_CARRITO FOREIGN KEY (ID_CARRITO) REFERENCES CARRITO(ID_CARRITO),
  CONSTRAINT FK_DETALLES_CARRITO_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);
